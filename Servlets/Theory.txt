server to client
sends response res object 
client sends req obj

HttpServletRequest and another are interfaces 

to call s1 from s1
using RequestDispatcher rd object
req, res of s1 is added with values particularly req 

sendredirect()
session management
__________________________________________________________________________________________
Servlet to JSP 
Tomcat is a servlet container
jsp is converted into servlet
implicit objects 
<%--%> scriptlets
<%! ---%> declaration
<%@page import ="java.utl.Date"%> directive
<%= %> Expression
__________________________________________________________________________________________
jsp directive has 
@page, @include, @taglib
<@page attribute="value" language="java" extends="className" session="true" autoFlush= "true|false" errorPage="error_url" info="informaton" isELIgnored"true|false"/>
<%@page import%>
<@include file="filename">
<@include file="header.jsp">
<@taglib uri="uri" prefix="fx:navin" %>
__________________________________________________________________________________________
implicit objets in jsp
Request(HttpServletRequest)
response(HttpServletResponse)
pageContext(PageContext)
out(JspWriter) PrintWriter object
session (HttpSession)
application(ServletContext)
config(ServletConfig)
no need to initiate

pageContext.setAttribute("name", "navin", PageContext.SESSION_SCOPE)
__________________________________________________________________________________________
excpetion handling in jsp

<%
    try{
        intk = 9/0;
    }catch(Exception e){
        out.println("There was an error"+e.getMessage());
    }
%>

error.jsp
__________________________________________________________________________________________
**jdbc with jsp
create database name
show database();
CREATE TABLE student (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255)
);


INSERT INTO student (name) 
VALUES 
    ('Rahul'), 
    ('Hari'), 
    ('Krishna');

__________________________________________________________________________________________
MVC using servlets and jsp
client (us) get view(layouot) from /getPage 
controller(Servlet) sends along with data(student info model)  to view 
model pojo plain old java object

Dao data access object 
is used by controller

__________________________________________________________________________________________
jstl ${label}
<%taglib %>

in jsp
<%taglib prefix="c" uri:="http://java.sun.com/jsp/jstl/core"%>
<c:out value="Hello world"/>


<c:import url="http://www.telusko.com/online.htm"></cimport> 
to import data

<c:set></c:set>

${student}
${student.name} gives error

so for Student.java 
generate bean meaning gtters and setters for the objects;
and slot toStrin() override method 

List<Student> studs = Arrays.asList(new Student(1, "navin"), new Student(2, "Arrti"));
${student} gives all them
<c:forEach item="${student}" var="s">
    ${s}<br/>
</c:forEach>

//3:18:36lkl


<%taglib prefix="sql" uri= "http://java.sun.com/jsp/jstl/sql" prefix = "sql"%>
<%taglib prefix ="c" uri="http://java.sun.com/jsp/jstl/core"/>
use mario;
select * from gadgets;
<sql:setDatasource var="db" driver="com.mysql.jdbc.Driver"
 user="root" password="" url="jdbc:mysql://localhost:3307/mario
/>

<sql:query var="rs" dataSource="${db}"select * from gadgets</sql:query>
<c:forEach items="${rs.rows}" var="gadget">
    <c:out value=${gadget.gid}></c:out>
    <c:out value=${gadget.name}></c:out>
    <c:out value=${gadget.price}></c:out>
    <br>
</>

__________________________________________________________________________________________
Jstl functional tags***
<c:set var="str" value="Navin Reddy is a Java Trainer"/>
Length${fn:Length(str)}
<c:forEach items=${fn:split(str,' ')} var="s">
 ${s}
</c:forEach>
${fn:contains(str, "Java")}//true
${fn:contains(str, "Jsp")}//false
<c:if test=${fn:contains(str, "java)}">
    Java is there will//will be shown in the browser
</c:if>
<c:if test=${fn.endWith(str, "Trainer")}>
    Java is there will//will be shown in the browser
</c:if>

{fn:toLowerCase(str)}//gives lower
__________________________________________________________________________________________
**servlet filter
we have a, b, c filter 
for a, b we need log fille
b,c transactions
then you need to code in these 3 filters

add filters f1 used for log
f2 for transactions 
f3 securities

filter chaining f1 to f3
web.xml will handle filters
create class extends serveltFitler
init 
doFilter(req, res)//intercept requests
destroy()

filterConfig
__________________________________________________________________________________________
login using servlet & JSP
using cookie is not safe for login as client can play with it
session is better as it is only availabe in server
for logout session.removeAttribute("uname")

stop the back page remove caching by meta tags